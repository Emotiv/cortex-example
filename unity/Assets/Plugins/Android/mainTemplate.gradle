apply plugin: 'com.android.library'
apply from: '../shared/keepUnitySymbols.gradle'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation(name: 'EmotivCortexLib', ext:'aar')
**DEPS**}

buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

repositories {
    google()
    mavenCentral()
}

android {
    ndkVersion "**NDKVERSION**"
    ndkPath "**NDKPATH**"
    namespace "com.unity3d.player"

    compileSdk **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk 24
        targetSdk **TARGETSDK**
        ndk {
            debugSymbolLevel **DEBUGSYMBOLLEVEL**
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
**DEFAULT_CONFIG_SETUP**
    }

    buildTypes {
        debug {
            // Set client_id for development environment
            String client_id = "put-your-client-id-for-dev-here"
			if (client_id.isEmpty()) {
				System.err << "You need to config value for client_id"
			}
			else {
				String value = client_id.md5()
				manifestPlaceholders = [
						'customScheme': 'emotiv-' + value,
						"appAuthRedirectScheme": ""
				]
			}
        }
        release {
            // Set client_id for production environment
			String client_id = "put-your-client-id-for-prod-here"
			if (client_id.isEmpty()) {
				System.err << "You need to config value for client_id"
			}
			else {
				String value = client_id.md5()
				manifestPlaceholders = [
						'customScheme': 'emotiv-' + value,
						"appAuthRedirectScheme": ""
				]
			}
            minifyEnabled true
        }
    }

    lint {
        abortOnError false
    }

    androidResources {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~"
    }
    packaging {
        exclude 'META-INF/kotlinx_coroutines_core.version'
        exclude 'META-INF/androidx.lifecycle_lifecycle-livedata-core.version'
        exclude 'kotlin/internal/internal.kotlin_builtins'
        exclude 'META-INF/androidx.lifecycle_lifecycle-viewmodel-savedstate.version'
        exclude 'META-INF/androidx.appcompat_appcompat.version'
        exclude 'kotlin/reflect/reflect.kotlin_builtins'
        exclude 'META-INF/*.version'
        exclude 'DebugProbesKt.bin'
        exclude 'kotlin/collections/*.kotlin_builtins'
        exclude 'kotlin/**/*.kotlin_builtins'
        exclude 'kotlin/*.kotlin_builtins'
    }
    **PACKAGING**
}
**IL_CPP_BUILD_SETUP**
**SOURCE_BUILD_SETUP**
**EXTERNAL_SOURCES**
